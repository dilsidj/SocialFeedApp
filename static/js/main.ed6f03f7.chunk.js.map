{"version":3,"sources":["image/user-1.jpg","image/girl-user.jpg","components/FontawesomeIcons/index.js","components/TopNavigationBar.js","components/LeftNavigationBar.js","components/Time.js","components/ShowCards.js","components/Cards.js","components/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","library","add","faFileAlt","faArrowLeft","faChevronRight","faFileWord","faUser","faUserFriends","faEnvelope","faChevronDown","faBrain","faNewspaper","faBook","faMicrophone","faCamera","faVideo","faBars","faTimes","TopNavigationBar","props","state","navBarFold","classname","resizeCount","toggleNavbar","bind","this","setState","toFoldNavbar","setInterval","window","addEventListener","innerWidth","className","icon","type","onClick","Component","LeftNavigationBar","details","name","role","image","userImage","updateUser","src","alt","Time","time","timeDiff","moment","fromNow","intervalID","clearInterval","ShowCards","onEnterPress","e","keyCode","shiftKey","preventDefault","textEdit","updateEditedText","key","changedText","addingCard","rows","minRows","maxRows","handleTextEdit","toggleCards","newText","target","value","previousRows","currentRows","scrollHeight","scrollTop","text","listItems","items","map","item","deleteItem","onKeyDown","onChange","Cards","addItem","submitRef","React","createRef","dummyItems","Date","now","currentItem","handleInput","console","log","localStorage","getItem","setItem","JSON","stringify","parse","userDetails","refs","child","newItem","json_items","newitems","remainingItems","filter","newItems","index","id","onSubmit","placeholder","ref","MainContainer","user","App","folded","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ed6f03f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user-1.537386ab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/girl-user.42a59a6b.jpg\";","import { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {faFileAlt,faArrowLeft ,faChevronRight,faFileWord,faUser,faUserFriends,faEnvelope,faChevronDown,faBrain,faNewspaper,faBook, faMicrophone, faCamera, faVideo, faBars, faTimes} from '@fortawesome/free-solid-svg-icons';\r\n \r\nlibrary.add(faFileAlt,faArrowLeft,faChevronRight,faFileWord,faUser,faUserFriends,faEnvelope,faChevronDown,faBrain,faNewspaper,faBook,faMicrophone,faCamera,faVideo,faBars,faTimes);","import React, { Component} from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport \"../Styles/TopNavigationBar.scss\";\r\n\r\n\r\nclass TopNavigationBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             navBarFold:'yes',\r\n             classname:'bars'\r\n             \r\n        }\r\n\r\n        this.resizeCount = 0;\r\n        \r\n\r\n        this.toggleNavbar=this.toggleNavbar.bind(this);\r\n        // this.windowSize = this.windowSize.bind(this);\r\n        \r\n    }\r\n\r\n\r\n   \r\n\r\n    toggleNavbar(){\r\n        this.setState({\r\n            navBarFold:this.state.navBarFold === 'yes' ? 'no' : 'yes',\r\n            classname:this.state.classname === 'bars hide' ? 'bars' : 'bars hide'\r\n        },function(){ this.props.toFoldNavbar(this.state.navBarFold);})\r\n    }\r\n\r\n\r\n\r\n\r\n    componentDidMount(){\r\n\r\n        setInterval(()=>{\r\n            window.addEventListener(\"resize\",() => {\r\n                if ( window.innerWidth > 790  &&  this.resizeCount === 1 && this.state.navBarFold === 'no')\r\n                {\r\n                    this.toggleNavbar();\r\n                    this.resizeCount=0;\r\n                }\r\n            });\r\n    \r\n            if(window.innerWidth <= 790 && this.state.navBarFold === 'no'){\r\n                this.resizeCount=1;\r\n            }\r\n    \r\n            if(window.innerWidth <= 790 && this.state.navBarFold === 'yes'){\r\n                this.resizeCount=0;\r\n            }\r\n\r\n        },1000)\r\n        \r\n\r\n        //  console.log(this.state.navBarFold,this.resizeCount );\r\n        \r\n    }\r\n\r\n    \r\n    \r\n    \r\n    render() {\r\n\r\n      \r\n        \r\n        return (\r\n            <div className=\"top-navbar\">\r\n            \r\n                <div className=\"navbar-title\">\r\n                    <FontAwesomeIcon icon=\"arrow-left\" className=\"arrow-left\"/>\r\n                    <p className=\"dashboard\">Dashboard </p>\r\n                    <FontAwesomeIcon icon=\"chevron-right\" className=\"chevron-right\"/>\r\n                    <p className=\"social-feed\">Social Feed</p>\r\n                </div>\r\n                \r\n                {/* {this.windowSize()} */}\r\n\r\n                <div className=\"navbar-icons\">\r\n                    <button type=\"button\" className=\"icon\" onClick={this.toggleNavbar}>\r\n                        <span className={this.state.navBarFold === \"yes\"?\"icon-bar\":\"icon-bar active\"}></span>\r\n                        <span className={this.state.navBarFold === \"yes\"?\"icon-bar\":\"icon-bar active\"}></span>\r\n                        <span className={this.state.navBarFold === \"yes\"?\"icon-bar\":\"icon-bar active\"}></span>\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopNavigationBar;","import React, { Component } from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport \"../Styles/LeftNavigationBar.scss\";\r\nimport userImage from '../image/user-1.jpg';\r\nimport {FaRegAddressCard} from 'react-icons/fa';\r\nimport {RiUserSharedLine,RiUserReceivedLine,RiArticleLine,RiFileEditLine} from 'react-icons/ri';\r\nimport {FiFileText} from 'react-icons/fi';\r\nimport {AiOutlineFileText} from 'react-icons/ai';\r\nimport {GrGroup} from 'react-icons/gr';\r\nimport {BiBrain } from 'react-icons/bi';\r\nimport {ImFileText} from 'react-icons/im';\r\n\r\n\r\nclass LeftNavigationBar extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       details:{\r\n          name:'Mamtha Patel',\r\n          role:'Marketing Expert',\r\n          image: userImage\r\n        }\r\n    }\r\n\r\n    this.props.updateUser(this.state.details);\r\n  }\r\n\r\n    render() {\r\n        return (\r\n          <div className={this.props.navBarFold === 'yes' ? \"left-navbar\" : \"left-navbar active\"} >\r\n\r\n                <div className=\"user\">\r\n                  <img  src={userImage} alt=\"\" className=\"user-image\" />\r\n                  <h3 className=\"user-name\">{this.state.details.name}</h3>\r\n                </div>\r\n   \r\n\r\n   \r\n\r\n                <div className=\"section-1\">\r\n\r\n                    <div className=\"options\">\r\n                      <i className=\"navbar-img\">\r\n                        {/* <FontAwesomeIcon icon=\"file-alt\" */}\r\n                        <FiFileText className=\"navbar-img\"/></i>\r\n                      <p className=\"navbar-title\">Buzz home</p>\r\n                    </div>\r\n\r\n                    <div className=\"options\">\r\n                      <i className=\"navbar-img\">\r\n                        {/* <FontAwesomeIcon icon=\"file-alt\"  */}\r\n                        <AiOutlineFileText className=\"navbar-img\"/></i>\r\n                      <p className=\"navbar-title\">My Buzz Posts</p>\r\n                      <p className=\"navbar-number\">8</p>\r\n                    </div>\r\n\r\n                    <div className=\"options\">\r\n                      <i className=\"navbar-img\">\r\n                        {/* <FontAwesomeIcon icon=\"file-word\"  */}\r\n                        <RiFileEditLine className=\"navbar-img\"/></i>\r\n                        <p className=\"navbar-title\">Draft Posts</p>\r\n                        <p className=\"navbar-number\">2</p>\r\n                    </div>\r\n\r\n                    <div className=\"options\">\r\n                      <i className=\"navbar-img\"> \r\n                      {/* <FontAwesomeIcon icon=\"user\"  */}\r\n                      <RiUserSharedLine className=\"navbar-img\"/></i>\r\n                        <p className=\"navbar-title\">My Followers</p>\r\n                        <p className=\"navbar-number\">33</p>\r\n                    </div>\r\n\r\n                    <div className=\"options\">\r\n                      <i className=\"navbar-img\">\r\n                        {/* <FontAwesomeIcon icon=\"user\"  */}\r\n                        <RiUserReceivedLine className=\"navbar-img\"/></i>\r\n                      \r\n                      <p className=\"navbar-title\">I am Following</p>\r\n                      <p className=\"navbar-number\">33</p>\r\n                    </div>\r\n\r\n                    <div className=\"options\">\r\n                    <i className=\"navbar-img\">\r\n                      {/* <FontAwesomeIcon icon=\"user-friends\"  */}\r\n                      <GrGroup className=\"navbar-img\"/></i>\r\n                      <p className=\"navbar-title\">My Teams</p>\r\n                      <p className=\"navbar-number\">12</p>\r\n                    </div>\r\n\r\n                    <div className=\"options\">\r\n                    <i className=\"navbar-img\">\r\n                      {/* <FontAwesomeIcon icon=\"envelope\"  */}\r\n                      <FaRegAddressCard className=\"navbar-img\"/></i>\r\n                      <p className=\"navbar-title\">My Reportees</p>\r\n                      <p className=\"navbar-number\">12</p>\r\n                    </div>\r\n\r\n                    <div className=\"see-more\">\r\n                      <p className=\"navbar-arrow\">see more</p>\r\n                      <i className=\"navbar-img\"><FontAwesomeIcon icon=\"chevron-down\" /></i>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n             \r\n\r\n\r\n\r\n                <div className=\"section-2\">\r\n\r\n                    <h2 className=\"topic\">Recently added:</h2>\r\n\r\n                    <div className=\"options\">\r\n                        <i className=\"navbar-img\">\r\n                          {/* <FontAwesomeIcon icon=\"newspaper\"  */}\r\n                          <RiArticleLine className=\"navbar-img\"/></i>\r\n                        <p className=\"navbar-title\">New Artefatcs</p>\r\n                        <p className=\"navbar-number\">82</p>\r\n                    </div>\r\n\r\n                    <div className=\"options\">\r\n                      <i className=\"navbar-img\">\r\n                        {/* <FontAwesomeIcon icon=\"book\"  */}\r\n                        <ImFileText className=\"navbar-img\"/></i>\r\n                        <p className=\"navbar-title\">New Module</p>\r\n                        <p className=\"navbar-number\">42</p>\r\n                    </div>\r\n\r\n                    <div className=\"options\">\r\n                      <i className=\"navbar-img\">\r\n                        {/* <FontAwesomeIcon icon=\"brain\" */}\r\n                         < BiBrain className=\"navbar-img\"/></i>\r\n                        <p className=\"navbar-title\">New Skills</p>\r\n                        <p className=\"navbar-number\">23</p>\r\n                    </div>\r\n\r\n                    <div className=\"see-more\">\r\n                        <p className=\"navbar-arrow\">see more</p>\r\n                        <i className=\"navbar-img\"><FontAwesomeIcon icon=\"chevron-down\" /></i>\r\n                    </div>\r\n\r\n                </div>\r\n      \r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LeftNavigationBar;\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nclass Time extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             time:this.props.time,\r\n             timeDiff:moment(this.props.time).fromNow()\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.intervalID =  setInterval(() =>{\r\n            if(this.state.time !== moment(this.props.time).fromNow())\r\n                this.setState({timeDiff:moment(this.props.time).fromNow()});\r\n        },1000);\r\n    }\r\n    \r\n    componentWillUnmount(){\r\n        clearInterval(this.intervalID);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.timeDiff}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Time;\r\n","import React, { Component } from 'react';\r\nimport '../Styles/ShowCards.scss';\r\nimport Time from './Time.js';\r\n\r\nclass ShowCards extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            textEdit:!(this.props.addingCard),\r\n            changedText:\"\",\r\n            key:\"\",\r\n            rows: 4,\r\n\t\t\tminRows: 1,\r\n\t\t\tmaxRows: 4\r\n\r\n        }\r\n\r\n        this.handleTextEdit=this.handleTextEdit.bind(this);\r\n        this.toggleCards = this.toggleCards.bind(this);\r\n        \r\n    }\r\n    \r\n\r\n    handleTextEdit(e) {\r\n        var newText = e.target.value;\r\n\r\n        const textareaLineHeight = 20;\r\n\t\tconst { minRows, maxRows } = this.state;\r\n\t\t\r\n\t\tconst previousRows = e.target.rows;\r\n  \t    e.target.rows = minRows; \r\n\t\t\r\n\t\tconst currentRows = ~~(e.target.scrollHeight / textareaLineHeight);\r\n    \r\n        if (currentRows === previousRows) {\r\n            e.target.rows = currentRows;\r\n        }\r\n\t\t\r\n        if (currentRows >= maxRows) {\r\n            e.target.rows = maxRows;\r\n            e.target.scrollTop = e.target.scrollHeight;\r\n        }\r\n          \r\n        this.setState({changedText:newText,rows: currentRows < maxRows ? currentRows : maxRows,})\r\n    }\r\n\r\n\r\n    toggleCards (key,text){\r\n\r\n        if(key === \"\" || this.state.key === key)\r\n        this.setState({\r\n                            textEdit: this.state.textEdit === true ? false : true,\r\n                            key:key,\r\n                            changedText:text\r\n                        })\r\n        else \r\n            this.setState({\r\n                textEdit: true,\r\n                key:key,\r\n                changedText:text\r\n            })\r\n\r\n    }\r\n\r\n    \r\n    onEnterPress = (e) => {\r\n        if(e.keyCode === 13 && e.shiftKey === false) {\r\n          e.preventDefault();\r\n          this.setState({ textEdit:false })\r\n          this.props.updateEditedText(this.state.key,this.state.changedText);  \r\n        }\r\n      }\r\n\r\n\r\n    \r\n\r\n    \r\n    \r\n\r\n    render() {\r\n\r\n    const items=this.props.items;\r\n    const listItems = items.map((item,key) =>\r\n        {\r\n            return <div  className=\"show-card\" key={key}>\r\n                    \r\n                        <div className=\"top-show-card\">\r\n\r\n                            <div className=\"show-card-image\">\r\n                                <img  src={item.image}  alt=\"show-card-user\" />\r\n                            </div>\r\n\r\n                            <div className=\"show-card-user-details\">\r\n                                <h2 className=\"user-name\">{item.name}</h2>\r\n                                <p className=\"user-role\">{item.role}</p>\r\n                                <p className=\"user-time\"><Time time={item.time} /></p>\r\n                            </div>\r\n\r\n                            <div className=\"show-card-share\">\r\n                                <p className=\"share\">...</p>\r\n\r\n                                <div className=\"show-card-alter\">\r\n                                    <button className=\"show-card-delete\" \r\n                                        onClick={ () => this.props.deleteItem(item.time)}>\r\n                                        Delete\r\n                                    </button>\r\n                                    <button className=\"show-card-edit\"  \r\n                                        onClick={() => this.toggleCards(key,item.text)}>\r\n                                        {(this.state.textEdit && this.state.key === key)? \"cancel\" : \"Edit\"}\r\n                                    </button>\r\n                                </div>\r\n                                \r\n                            </div>\r\n\r\n                        </div>\r\n                        \r\n\r\n                        <div className=\"bottom-show-card\">\r\n                            <p  className={(this.state.textEdit === true && this.state.key === key)?\r\n                                   \"show-card-content\"  : \"show-card-content active\" }>\r\n                                {item.text}\r\n                            </p>\r\n\r\n                            <textarea type=\"text\"\r\n                                className={(this.state.textEdit === true && this.state.key === key)?\r\n                                    \"show-card-edit-content active\"  : \"show-card-edit-content\" }\r\n                                rows={this.state.rows}\r\n                                value={this.state.changedText} \r\n                                onKeyDown={this.onEnterPress}\r\n                                onChange={this.handleTextEdit}\r\n                            />\r\n                        </div>\r\n                        \r\n                    </div>\r\n\r\n        })\r\n\r\n    return (\r\n        <div className=\"\">\r\n            {listItems}\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ShowCards;\r\n","import React, { Component } from 'react';\r\nimport '../Styles/Cards.scss';\r\nimport ShowCards from './ShowCards';\r\nimport userImage from '../image/girl-user.jpg';\r\nimport VideocamOutlinedIcon from '@material-ui/icons/VideocamOutlined';\r\nimport CameraEnhanceOutlinedIcon from '@material-ui/icons/CameraEnhanceOutlined';\r\nimport MicNoneOutlinedIcon from '@material-ui/icons/MicNoneOutlined';\r\n// import JSON_items from '../api/items.json';\r\n\r\n\r\nclass Cards extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    \r\n    this.submitRef = React.createRef();\r\n\r\n    this.state = {\r\n\r\n       dummyItems:[\r\n              {\r\n                name:'Oslo',\r\n                role:'Marketing Expert',\r\n                image: userImage,\r\n                text:\"Marketing tips are here : Reach influencers , Decision and l... Marketing tips are here : Reach influencers , Decision and l... Marketing tips are here : Reach influencers , Decision and l...\",\r\n                time:Date.now()\r\n              },\r\n              {\r\n                name:'Oslo',\r\n                role:'Marketing Expert',\r\n                image: userImage,\r\n                text:\"Marketing tips are here : Reach influencers , Decision and l... Marketing tips are here : Reach influencers , Decision and l... Marketing tips are here : Reach influencers , Decision and l...\",\r\n                time:Date.now() + 1 \r\n              }\r\n            ],\r\n       items:[],\r\n       currentItem:{\r\n        name:'',\r\n        role:'',\r\n        image: '',\r\n        text:'',\r\n        key:'',\r\n        time:''\r\n       },\r\n       rows: 1,\r\n\t\t\t minRows: 1,\r\n\t\t\t maxRows: 4,\r\n       addingCard:false\r\n    }\r\n\r\n    \r\n\r\n\r\n    this.handleInput=this.handleInput.bind(this);\r\n    this.addItem=this.addItem.bind(this);\r\n    this.deleteItem=this.deleteItem.bind(this);\r\n    this.updateEditedText = this.updateEditedText.bind(this);\r\n  }\r\n\r\n\r\n\r\n  componentDidMount(){\r\n\r\n    console.log(localStorage.getItem(\"items\") === \"null\" + localStorage.getItem(\"items\") === \"[]\");\r\n\r\n    if(localStorage.getItem(\"items\") === \"null\" || localStorage.getItem(\"items\") === \"[]\")\r\n      localStorage.setItem(\"items\",JSON.stringify(this.state.dummyItems));\r\n    \r\n    this.setState({\r\n       items:JSON.parse(localStorage.getItem(\"items\"))\r\n    });\r\n\r\n    \r\n \r\n  }\r\n\r\n  componentDidUpdate(){\r\n    \r\n      localStorage.setItem(\"items\",JSON.stringify(this.state.items));\r\n  }\r\n\r\n\r\n\r\n  \r\n  \r\n    handleInput(e){\r\n\r\n\r\n\r\n      const textareaLineHeight = 20;\r\n\t\t  const { minRows, maxRows } = this.state;\r\n\t\t\r\n\t\t  const previousRows = e.target.rows;\r\n  \t  e.target.rows = minRows; \r\n\t\t\r\n\t\t  const currentRows = ~~(e.target.scrollHeight / textareaLineHeight);\r\n    \r\n      if (currentRows === previousRows) {\r\n    \t  e.target.rows = currentRows;\r\n      }\r\n\t\t\r\n\t\t  if (currentRows >= maxRows) {\r\n\t\t\t  e.target.rows = maxRows;\r\n\t\t\t  e.target.scrollTop = e.target.scrollHeight;\r\n    }\r\n    \r\n  \t\r\n\r\n\r\n      this.setState({\r\n        value: e.target.value,\r\n        rows: currentRows < maxRows ? currentRows : maxRows,\r\n        currentItem:{\r\n          name:this.props.userDetails.name,\r\n          role:this.props.userDetails.role,\r\n          image:this.props.userDetails.image,\r\n          text:e.target.value,\r\n          time:Date.now()\r\n        },\r\n        addingCard:true\r\n      });\r\n      \r\n      this.refs.child.toggleCards();\r\n\r\n    }\r\n\r\n\r\n\r\n    addItem(e){\r\n      const newItem= this.state.currentItem;\r\n    \r\n      const json_items = JSON.parse(localStorage.getItem(\"items\"));\r\n      \r\n      if(newItem.text!==\"\"){\r\n        const newitems=[newItem,...json_items];\r\n        \r\n        localStorage.setItem(\"items\",JSON.stringify(newitems));\r\n\r\n        this.setState({\r\n          items:JSON.parse(localStorage.getItem(\"items\")),\r\n          currentItem:{\r\n            text:'',\r\n            key:'',\r\n            time:''\r\n          },\r\n          rows:1,\r\n          maxRows:4,\r\n          minRows:1\r\n        })\r\n      }\r\n\r\n      \r\n      \r\n    }\r\n\r\n\r\n     \r\n\r\n    onEnterPress = (e) => {\r\n      if(e.keyCode === 13 && e.shiftKey === false) {\r\n        e.preventDefault();\r\n        this.addItem();\r\n      }\r\n    }\r\n\r\n\r\n\r\n    deleteItem(key){\r\n      const remainingItems = this.state.items.filter(item => item.time !== key);\r\n      this.setState({items : remainingItems})\r\n      \r\n      console.log(\"deleted\" + remainingItems);\r\n\r\n    }\r\n\r\n\r\n    updateEditedText(key,text){\r\n\r\n      const newItems = this.state.items.map((item,index) =>\r\n          {\r\n              if(key === index) item.text = text;\r\n\r\n              return item;\r\n          }\r\n      )\r\n\r\n      this.setState({items:newItems})\r\n\r\n\r\n    }\r\n\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"cards\">\r\n              <div className={this.props.navBarFold === \"yes\" ? \"overlay\":\"overlay active\"} ></div>\r\n              <div className=\"wrapper\">\r\n                <div className=\"fill-card\">\r\n                  <div className=\"top-fill-card\">\r\n                    <img alt=\"use\" src={this.props.userDetails.image} className=\"fill-card-image\" />\r\n                    \r\n                    <form id=\"\" onSubmit={this.addItem} >\r\n                       <textarea type=\"text\" rows={this.state.rows}  \r\n                            placeholder=\"share something here ....\"  \r\n                            className=\"fill-card-box\"\r\n                            value={this.state.currentItem.text} \r\n                            onKeyDown={this.onEnterPress}\r\n                            onChange={this.handleInput} />\r\n                    </form>\r\n                  </div>\r\n\r\n                  <div className=\"bottom-fill-card\">\r\n\r\n                    <div className=\"fill-card-media\">\r\n                      <i className=\"media-icon\">\r\n                        <VideocamOutlinedIcon/>\r\n                      </i>\r\n                      <p className=\"media-title\">Any attachment</p>\r\n                    </div>\r\n\r\n                    <div className=\"fill-card-media\">\r\n                      <i className=\"media-icon\">\r\n                        <CameraEnhanceOutlinedIcon />\r\n                      </i>\r\n                      <p className=\"media-title\">capture it</p>\r\n                    </div>\r\n                    \r\n                    <div className=\"fill-card-media\">\r\n                      <i className=\"media-icon\">\r\n                        <MicNoneOutlinedIcon />\r\n                      </i>\r\n                      <p className=\"media-title\">say it</p>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                \r\n                <ShowCards  items ={this.state.items} \r\n                            ref=\"child\"\r\n                            deleteItem={this.deleteItem}  \r\n                            updateEditedText ={ this.updateEditedText}\r\n                            addingCard = {this.state.addingCard}\r\n                />\r\n\r\n\r\n              </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cards;\r\n","import React, { Component } from 'react';\r\nimport LeftNavigationBar from './LeftNavigationBar';\r\nimport Cards from './Cards';\r\nimport '../Styles/MainContainer.scss';\r\n\r\n\r\n\r\nclass MainContainer extends Component {\r\n    \r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            userDetails:{\r\n                name:'',\r\n                role:'',\r\n                image:''\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    updateUser(user){\r\n        this.setState({\r\n            userDetails:user\r\n        })\r\n\r\n    }\r\n\r\n\r\n    \r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"main-container\">\r\n                \r\n                <LeftNavigationBar navBarFold={this.props.navBarFold} updateUser={this.updateUser.bind(this)}/>\r\n                \r\n                <Cards navBarFold={this.props.navBarFold} userDetails={this.state.userDetails}/>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default MainContainer;\r\n","import React, { Component } from 'react';\nimport \"./components/FontawesomeIcons\";\nimport './App.scss';\nimport TopNavigationBar from './components/TopNavigationBar';\nimport MainContainer from './components/MainContainer';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       navBarFold:'yes'\n    }\n\n  }\n\n  toFoldNavbar(folded){\n      this.setState({   navBarFold:folded  })\n  }\n  \n\n  render() {\n    return (\n      <div className=\"App\">\n      \n          <TopNavigationBar toFoldNavbar={this.toFoldNavbar.bind(this)}/>\n         \n          <MainContainer navBarFold={this.state.navBarFold}/>\n\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}